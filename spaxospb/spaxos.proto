syntax = "proto2";
package spaxospb;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.goproto_enum_prefix_all) = false;
option (gogoproto.equal_all) = true;



enum MessageType {
    MsgHup              = 0;
    MsgBeat             = 1;
    MsgOnline           = 2;

    // # Prop
    MsgProp             = 5;
    MsgPropResp         = 6;
    // # Accpt
    MsgAccpt            = 7;
    MsgAccptResp        = 8;

    // # catch up
    MsgCatchUp          = 9;

    // # TODO
    // internal msg type : drive
    MsgTimeOut          = 10;
    MsgMajorReject      = 11;
    MsgCliProp          = 12;
    MsgMCliProp         = 13;
    MsgTryCatchUp       = 14;

    MsgUpdateMinIndex   = 22;
    MsgReadChosen       = 23;

    MsgChosen           = 30;

    MsgInvalid          = 0xFF;
}

message PaxosEntry {
    optional uint64       propNum     = 1 [(gogoproto.nullable) = false];
    optional uint64       accptNum    = 2 [(gogoproto.nullable) = false];
    optional ProposeItem  value       = 3;
    // [(gogoproto.nullable) = false];
}


message Message {
    optional MessageType type       = 1 [(gogoproto.nullable) = false];
    optional uint64      to         = 3 [(gogoproto.nullable) = false];
    optional uint64      from       = 4 [(gogoproto.nullable) = false];
    optional uint64      index      = 5 [(gogoproto.nullable) = false];
    optional PaxosEntry  entry      = 6 [(gogoproto.nullable) = false];
    optional bool        reject     = 7 [(gogoproto.nullable) = false];
    optional HardState   hs         = 8 [(gogoproto.nullable) = false];
    optional uint64      timestamp  = 9 [(gogoproto.nullable) = false];
}

message HardState {
    optional bool    chosen          = 1 [(gogoproto.nullable) = false];
    optional uint64  index           = 3 [(gogoproto.nullable) = false];
    optional uint64  maxProposedNum  = 4 [(gogoproto.nullable) = false];
    optional uint64  maxPromisedNum  = 5 [(gogoproto.nullable) = false];
    optional uint64  maxAcceptedNum  = 6 [(gogoproto.nullable) = false];
    optional ProposeItem   acceptedValue  = 7;
    optional uint64  hostPropReqid       = 8 [(gogoproto.nullable) = false];
    // [(gogoproto.nullable) = false];
}

message ProposeItem {
    required uint64  reqid = 1 [(gogoproto.nullable) = false];
    repeated bytes   values = 2;
}



